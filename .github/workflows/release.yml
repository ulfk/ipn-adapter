name: Build and Release WordPress Plugin

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Get plugin info
      id: plugin_info
      run: |
        # Extract plugin name from directory or main plugin file
        PLUGIN_NAME=$(basename "$GITHUB_REPOSITORY")
        echo "plugin_name=$PLUGIN_NAME" >> $GITHUB_OUTPUT
        
        FILE_VERSION=''
        # If you have a specific main plugin file, you can extract version from it
        if [ -f "ipn-adapter.php" ]; then
          FILE_VERSION=$(grep -i "Version:" ipn-adapter.php | head -1 | sed 's/.*Version:\s*//' | sed 's/\s*$//')
          #if [ -n "$VERSION" ]; then
          #  echo "version=$VERSION" >> $GITHUB_OUTPUT
          #fi
        fi
        
        # Use tag as version if available
        if [ "$GITHUB_REF_TYPE" = "tag" ]; then
          TAG_VERSION=${GITHUB_REF#refs/tags/}
          if [ -n "$FILE_VERSION" -a "v$FILE_VERSION" = "$TAG_VERSION" ]
          then
            echo "version=$TAG_VERSION" >> $GITHUB_OUTPUT
          else
            echo "ERROR: file-version 'v$FILE_VERSION' does not match tag-version '$TAG_VERSION'"
            exit 1
          fi
        fi

    - name: Create plugin directory structure
      run: |
        mkdir -p build
        PLUGIN_NAME="${{ steps.plugin_info.outputs.plugin_name }}"
        
        # Copy all files except unwanted ones
        rsync -av \
          --exclude='.git*' \
          --exclude='node_modules' \
          --exclude='build' \
          --exclude='*.log' \
          --exclude='*.http' \
          --exclude='.DS_Store' \
          --exclude='Thumbs.db' \
          --exclude='*.zip' \
          --exclude='*.png' \
          --exclude='composer.json' \
          --exclude='composer.lock' \
          --exclude='package.json' \
          --exclude='package-lock.json' \
          --exclude='webpack.config.js' \
          --exclude='gulpfile.js' \
          --exclude='Gruntfile.js' \
          --exclude='.github' \
          --exclude='README.md' \
          --exclude='tests' \
          --exclude='phpunit.xml' \
          ./ "build/$PLUGIN_NAME/"

    - name: Create ZIP file
      run: |
        cd build
        PLUGIN_NAME="${{ steps.plugin_info.outputs.plugin_name }}"
        VERSION="${{ steps.plugin_info.outputs.version }}"
        
        if [ -n "$VERSION" ]; then
          ZIP_NAME="${PLUGIN_NAME}-${VERSION}.zip"
        else
          ZIP_NAME="${PLUGIN_NAME}.zip"
        fi
        
        zip -r "$ZIP_NAME" "$PLUGIN_NAME"
        echo "zip_name=$ZIP_NAME" >> $GITHUB_ENV

    - name: Read Release Notes
      id: release_notes
      run: echo "release_notes_content=$(cat release-notes.md | tr '\n' '\r')" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: ./build/${{ env.zip_name }}
        name: Release ${{ steps.plugin_info.outputs.version || github.ref_name }}
        body: |
          WordPress Plugin Release
          
          ## Installation
          1. Download the ZIP file below
          2. Go to your WordPress admin dashboard
          3. Navigate to Plugins → Add New → Upload Plugin
          4. Select the ZIP file and click "Install Now"
          5. Activate the plugin
          
          ## Changes
          ${{ steps.release_notes.outputs.release_notes_content }}
        draft: false
        prerelease: false
